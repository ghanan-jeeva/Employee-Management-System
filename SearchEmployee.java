//finished

import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package main.ems;

/**
 *
 * @author 559544
 */
public class SearchEmployee extends javax.swing.JFrame {
    MyHashTable hashTable;

    /**
     * Creates new form SearchEmployee
     */
    public SearchEmployee(MyHashTable hashTable) {
        this.model = (DefaultTableModel) searchEmployeesTable.getModel();
        this.hashTable = hashTable;
        initComponents();
    }
    
    DefaultTableModel model;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem1 = new javax.swing.JMenuItem();
        searchTableTitle = new javax.swing.JTextField();
        employeeNumberText = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        employeeNumberBox = new javax.swing.JTextPane();
        enterButton = new javax.swing.JButton();
        resetButton = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        searchEmployeesTable = new javax.swing.JTable();

        jMenuItem1.setText("jMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        searchTableTitle.setFont(new java.awt.Font("Mongolian Baiti", 0, 24)); // NOI18N
        searchTableTitle.setText("Search Table");
        searchTableTitle.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        searchTableTitle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchTableTitleActionPerformed(evt);
            }
        });

        employeeNumberText.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        employeeNumberText.setText("Search By Employee Number");

        jScrollPane1.setViewportView(employeeNumberBox);

        enterButton.setText("Enter");
        enterButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                enterButtonMousePressed(evt);
            }
        });

        resetButton.setText("Reset");

        searchEmployeesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Employee Number", "First Name", "Last Name", "Gender", "Work Location", "Deduction Rate", "Part Time/Full Time", "Annual Salary"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Float.class, java.lang.String.class, java.lang.Double.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane3.setViewportView(searchEmployeesTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(employeeNumberText)
                .addGap(29, 29, 29)
                .addComponent(jScrollPane1)
                .addGap(44, 44, 44)
                .addComponent(enterButton, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(103, 103, 103))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jScrollPane3)
                .addGap(33, 33, 33))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(473, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(resetButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(searchTableTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(452, 452, 452))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(searchTableTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(65, 65, 65)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(employeeNumberText)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(enterButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(resetButton, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void searchTableTitleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchTableTitleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchTableTitleActionPerformed

    private void enterButtonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_enterButtonMousePressed
        // TODO add your handling code here:
        //call isInTable
        
        if(hashTable.isInTable(empNumber) = false){
            EmployeeDoesntExist errorMessage = new EmployeeDoesntExist();
            errorMessage.setVisible(true);
            errorMessage.setDefaultCloseOperation(EmployeeDoesntExist.DISPOSE_ON_CLOSE);
            }
        else{
            int empNumber = Integer.parseInt(employeeNumberBox.getText());
            for (int i = 0; i < hashTable.buckets.length; i++){         

                for (int j = 0; j < hashTable.buckets[i].size(); j++){

                    if (empNumber == hashTable.buckets[i].get(j).getEmployeeNumber()){
                        String firstName = hashTable.buckets[i].get(j).getFirstName();
                        String lastName = hashTable.buckets[i].get(j).getLastName();
                        String deductionRate = Double.toString(hashTable.buckets[i].get(j).getDeductRate());
                        String gender = hashTable.buckets[i].get(j).getGender();
                        String wLocation = hashTable.buckets[i].get(j).getWorkLocation();

                        if(this.hashTable.buckets[i].get(j).getEmployeeNumber instanceof PTEmployee){  
                            String typeWorker = "Part Time";
                            String annualSalary = Double.toString(PTEmployee.calcAnnualNetIncome(hashTable.empInfo(hashTable.buckets.get(j).getEmployeeNumber())));
                            Object[] row = {empNumber, firstName,lastName, gender, wLocation,deductionRate, typeWorker, annualSalary };
                            model.addRow(row);
                    }    

                        else if(this.hashTable.buckets[i].get(j).getEmployeeNumber instanceof FTEmployee){  
                            String typeWorker = "Full Time";
                            String annualSalary = Double.toString(FTEmployee.calcAnnualNetIncome(hashTable.empInfo(hashTable.buckets.get(j).getEmployeeNumber())));
                            Object[] row = {empNumber, firstName,lastName, gender, wLocation,deductionRate, typeWorker, annualSalary };
                            model.addRow(row);


                    }

                    }
                }
        }
        
    }//GEN-LAST:event_enterButtonMousePressed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SearchEmployee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SearchEmployee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SearchEmployee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SearchEmployee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SearchEmployee().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextPane employeeNumberBox;
    private javax.swing.JLabel employeeNumberText;
    private javax.swing.JButton enterButton;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JButton resetButton;
    private javax.swing.JTable searchEmployeesTable;
    private javax.swing.JTextField searchTableTitle;
    // End of variables declaration//GEN-END:variables
}
